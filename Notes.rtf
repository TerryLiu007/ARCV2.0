{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red65\green182\blue69;\red30\green32\blue40;\red178\green24\blue137;
\red255\green255\blue255;\red120\green109\blue196;\red219\green44\blue56;}
{\*\expandedcolortbl;;\csgenericrgb\c25500\c71400\c27000;\csgenericrgb\c11800\c12500\c15700;\csgenericrgb\c69800\c9500\c53600;
\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c46900\c42600\c77000;\csgenericrgb\c85900\c17100\c21900;}
\paperw11900\paperh16840\margl1440\margr1440\vieww31220\viewh16620\viewkind0
\deftab890
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \cb3 // Add OpenCVPixelBuffer struct\cf4 \cb3 \
typedef\cf5  \cf4 struct
\f1\fs24 \cf0 \
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf5 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \cf4 void\cf5 * YPixelBytes;
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \cf4 BOOL\cf5  Enabled;
\f1\fs24 \cf0 \

\f0\fs36 \cf5 \}OpenCVPixelBuffer;
\f1\fs24 \cf0 \
\
\
\
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \cb3 // Construct s_OpenCVPixelBuffer object
\f1\fs24 \cf0 \cb3 \
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf4 static\cf5  OpenCVPixelBuffer s_OpenCVPixelBuffer;
\f1\fs24 \cf0 \
\
\
\
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \cb3 // Add following lines to method -(void)session: (ARSession *)session didUpdateFrame:(ARFrame *) frame
\f1\fs24 \cf0 \cb3 \
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0

\f0\fs36 \cf5     \cf4 if\cf5  (s_OpenCVPixelBuffer.Enabled)
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \{
\f1\fs24 \cf0 \

\f0\fs36 \cf5         
\f1\fs24 \cf0 \

\f0\fs36 \cf5         CVPixelBufferLockBaseAddress(pixelBuffer, kCVPixelBufferLock_ReadOnly);
\f1\fs24 \cf0 \

\f0\fs36 \cf5         
\f1\fs24 \cf0 \

\f0\fs36 \cf5         \cf4 if\cf5  (s_OpenCVPixelBuffer.YPixelBytes)
\f1\fs24 \cf0 \

\f0\fs36 \cf5         \{
\f1\fs24 \cf0 \

\f0\fs36 \cf5             \cf4 unsigned\cf5  \cf4 long\cf5  numBytes = CVPixelBufferGetBytesPerRowOfPlane(pixelBuffer, \cf6 0\cf5 ) * CVPixelBufferGetHeightOfPlane(pixelBuffer,\cf6 0\cf5 );
\f1\fs24 \cf0 \

\f0\fs36 \cf5             \cf4 void\cf5 * baseAddress = CVPixelBufferGetBaseAddressOfPlane(pixelBuffer,\cf6 0\cf5 );
\f1\fs24 \cf0 \

\f0\fs36 \cf5             memcpy(s_OpenCVPixelBuffer.YPixelBytes, baseAddress, numBytes);
\f1\fs24 \cf0 \

\f0\fs36 \cf5         \}
\f1\fs24 \cf0 \

\f0\fs36 \cf5         
\f1\fs24 \cf0 \

\f0\fs36 \cf5         CVPixelBufferUnlockBaseAddress(pixelBuffer, \cf6 0\cf5 );
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \}
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \
\
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0
\cf2 \cb3 // Create the native mirror to the C# OpenCVPixelData object\cf5 \cb3 \
\pard\tx890\pardeftab890\pardirnatural\partightenfactor0
\cf4 extern\cf5  \cf7 "C"\cf5  \cf4 void\cf5  OpenCVPixelData (uint32_t enable, \cf4 void\cf5 * YPixelBytes)
\f1\fs24 \cf0 \

\f0\fs36 \cf5 \{
\f1\fs24 \cf0 \

\f0\fs36 \cf5     s_OpenCVPixelBuffer.Enabled = (\cf4 BOOL\cf5 ) enable;
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \cf4 if\cf5  (s_OpenCVPixelBuffer.Enabled)
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \{
\f1\fs24 \cf0 \

\f0\fs36 \cf5         s_OpenCVPixelBuffer.YPixelBytes = YPixelBytes;
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \} \cf4 else\cf5  \{
\f1\fs24 \cf0 \

\f0\fs36 \cf5         s_OpenCVPixelBuffer.YPixelBytes = \cf4 NULL\cf5 ;
\f1\fs24 \cf0 \

\f0\fs36 \cf5     \}
\f1\fs24 \cf0 \

\f0\fs36 \cf5 \}\
}